<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eventmarker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title Screen

//Display "Press Start"
display = 0;
alarm[0] = 2;

//Loop 'Title' theme
alarm[1] = 2;

//Confirmed to go to the world map
confirmed_selection = false;

//Create the spotlight
spotlight = surface_create(room_width,room_height);

//The spotlight's starting position (negative doesn't draw so it acts as a timer)
scale = -25;

//Menu mode
//1: Activating...
//2: Active
//3: Key
mode = 1;

//Page
page = 0;

//Current selection on page
current = 0;

enum menupage {

    main = 0,
    fileselect = 1,
    options1 = 2,
    keys1 = 3,
    keys2 = 4,
    filedelete = 5,
    options2 = 6

}

//Menu 1 - Main Menu
menu[menupage.main,0] = "START GAME";
menu[menupage.main,1] = "OPTIONS";
menu[menupage.main,2] = "EXIT";

//Menu 2 - File Select
menu[menupage.fileselect,0] = "FILE A";
menu[menupage.fileselect,1] = "FILE B";
menu[menupage.fileselect,2] = "FILE C";
menu[menupage.fileselect,3] = "ERASE DATA";
menu[menupage.fileselect,4] = "BACK";

//Menu 2 - File Delete
menu[menupage.filedelete,0] = "ERASE FILE A";
menu[menupage.filedelete,1] = "ERASE FILE B";
menu[menupage.filedelete,2] = "ERASE FILE C";
menu[menupage.filedelete,3] = "BACK";

//Menu 3 - Options 1 / 2
menu[menupage.options1,0] = "KEYBOARD CONFIG";
menu[menupage.options1,1] = "SET WINDOW SIZE";
menu[menupage.options1,2] = "AUTO-SAVE: ON";
menu[menupage.options1,3] = "HUD: DEFAULT";
menu[menupage.options1,4] = "NEXT PAGE";
menu[menupage.options1,5] = "BACK";

//Menu 4 - Options 2 / 2
menu[menupage.options2,0] = "V-SYNC: ON";
menu[menupage.options2,1] = "FPS: ON";
menu[menupage.options2,2] = "VIEW CREDITS";
menu[menupage.options2,3] = "PREVIOUS PAGE";
menu[menupage.options2,4] = "BACK";

//Menu 5: Keys 1 / 2
menu[menupage.keys1,0] = "RUN/SHOOT: " + string(key_to_string(global.key[input.action1]));
menu[menupage.keys1,1] = "JUMP: " + string(key_to_string(global.key[input.action0]));
menu[menupage.keys1,2] = "SPIN: " + string(key_to_string(global.key[input.action2]));
menu[menupage.keys1,3] = "RESERVE   : " + string(key_to_string(global.key[input.select]));
menu[menupage.keys1,4] = "PAUSE     : " + string(key_to_string(global.key[input.start]));
menu[menupage.keys1,5] = "RESET KEYS TO DEFAULT"
menu[menupage.keys1,6] = "NEXT PAGE"
menu[menupage.keys1,7] = "BACK"

//Menu 6: Keys 2 / 2
menu[menupage.keys2,0] = "Up        : " + string(key_to_string(global.key[input.up]));
menu[menupage.keys2,1] = "Down      : " + string(key_to_string(global.key[input.down]));
menu[menupage.keys2,2] = "Left      : " + string(key_to_string(global.key[input.left]));
menu[menupage.keys2,3] = "Right     : " + string(key_to_string(global.key[input.right]));
menu[menupage.keys2,4] = "RESET KEYS TO DEFAULT"
menu[menupage.keys2,5] = "PREVIOUS PAGE";
menu[menupage.keys2,6] = "BACK";

//File info
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go to the intro sequence

//Disable pixelation
with (obj_controller) {

    pixelate = 60;
}

//Go to the engine test
room_goto(rm_intro);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset keys

//Action 0
global.key[input.action0] = vk_shift;

//Action 1
global.key[input.action1] = vk_control;

//Action 2
global.key[input.action2] = vk_space;

//Select
global.key[input.start] = vk_backspace;

//Start
global.key[input.start] = vk_enter;

//Up
global.key[input.up] = vk_up;

//Down
global.key[input.down] = vk_down;

//Left
global.key[input.left] = vk_left;

//Right
global.key[input.right] = vk_right;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set active mode
mode = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to the next room

//Disable pixelation
with (obj_controller) {

    pixelate = 60;
}

//Go to the engine test
room_goto(rm_worldmap);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loop 'Title' theme

//Open INI
ini_open("MWDMusic.ini");

//Read values
levelmusic  = ini_read_string('Title', 'song_name', 0);
loop_s      = ini_read_real('Title', 'loop_s', 0);
loop_e      = ini_read_real('Title', 'loop_e', 1);
sample_rate = ini_read_real('Title', 'sample_rate', 0);

//Close INI
ini_close();

//Add the sound
global.stream = audio_create_stream(levelmusic);

//Play it
audio_loop_sound(global.stream, loop_s, loop_e, sample_rate, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display / No Display "Press Start!

display = !display;

if (mode &gt; 1) {

    if (display == false)
    
        alarm[0] = 10;
        
    else
    
        alarm[0] = 20;
        
}

    alarm[0] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage background position, spotlight, and open the menu if certain inputs are pressed.

//Scale out the spotlight
if (scale &lt; 300)

    scale += 3;
    
if (scale &gt;= 0) {
    
    //Open menu initially
    if ((input_check_pressed(input.start))
    || (input_check_pressed(input.action0))
    || (input_check_pressed(input.action2)))
    &amp;&amp; (!confirmed_selection) {
    
        if (scale &gt;= 100) {
    
            //Play 'Menu' sound
            audio_play_sound(snd_fireball, 0, false);
            
        }
    
        //Set active mode
        alarm[3] = 2;
    
        //Confirm selection so that you cannot press the button again
        confirmed_selection = true;
    
        //Set spotlight scale to maximum
        scale = 300;
        
        //Make cursor visible
        display = true;
        alarm[0] = 20;
    
    }

}

//Set background 0 position
background_x[0] -= 1;

//Set background 1 position
background_x[1] -= 2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage menus

//If the menu is not on key change mode
if (mode == 2) {

    var current_page = page;

    //If the player presses the 'Up' key
    if (input_check_pressed(input.up)) {
    
        //Make cursor visible
        display = true;
        alarm[0] = 20;
    
        //Play 'Fireball' sound
        audio_stop_play_sound(snd_fireball, 0, false);
    
        //Cycle between options
        if (current == 0)
        
            current = array_length_2d(menu,page)-1;
        else
        
            current --;
    }
    
    //Otherwise, if the player presses the 'Down' key
    else if ((input_check_pressed(input.down))
    || (input_check_pressed(input.select))) {
    
        //Make cursor visible
        display = true;
        alarm[0] = 20;
    
        //Play 'Fireball' sound
        audio_stop_play_sound(snd_fireball, 0, false);
    
        //Cycle between options        
        if (current == array_length_2d(menu,page)-1)
        
            current = 0;
            
        else
        
            current ++;
    }
    
    //Otherwise, if the player presses the 'Action 1' key
    else if (input_check_pressed(input.action1)) {
    
        var current_page = page;
    
        //File select &amp; Options
        if (page == menupage.fileselect || page == menupage.options1) {
        
            //Go back to the 'Options' selection if you were in the Options menu
            if (page == menupage.options1)
            
                current = 1;
                
            else
            
                current = 0;
        
            //Go to first page
            page = menupage.main;
            
            //Play 'Fireball' sound
            audio_stop_play_sound(snd_fireball, 0, false);
            
        }
        
        //File Delete
        else if (page == menupage.filedelete) {
        
            //Go to File Select
            page = menupage.fileselect;
            
            //Reset current selection
            current = 0;
                
            //Play 'Fireball' sound
            audio_stop_play_sound(snd_fireball, 0, false);
        
        }
        
        //Options page 2
        else if (page == menupage.options2) {
    
            //Go to Options 1
            page = menupage.options1;
    
            //Bring the pointer selection 1 up
            current ++;
                
            //Play 'Fireball' sound
            audio_stop_play_sound(snd_fireball, 0, false);
            
        }
        
        //Keys 1/2
        else if (page == menupage.keys1) {
        
            //Go to Options
            page = menupage.options1;
            
            //Reset selection
            current = 0;
            
            //Play 'Fireball' sound
            audio_stop_play_sound(snd_fireball, 0, false);
        
        }
        
        //Keys 2/2
        else if (page == menupage.keys2) {
        
            //Go to Keys page 1
            page = menupage.keys1;
            
            //Bring the pointer selection 1 up
            current ++;
            
            //Play 'Fireball' sound
            audio_stop_play_sound(snd_fireball, 0, false);
        
        }
        
        //If the page has changed from pressing a button...
        if (page != current_page) {
        
            //Make the pointer show up
            display = true;
            
            //Set pointer timer
            alarm[0] = 20;
        
        }
    
    }
    
    //Otherwise, if the player presses 'Action 0'
    else if ((input_check_pressed(input.start))
    || (input_check_pressed(input.action0))
    || (input_check_pressed(input.action2))) {
    
        //Main
        if (page == menupage.main) {
        
            //Option 1: Start Game (Will need to change once saving is added)
            if (current == 0) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to file select
                page = menupage.fileselect;
                
                //Reset option to the top
                current = 0;
                
                //File info
                event_user(0);
        
            }
            
            //Option 2: Options
            else if (current == 1) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Options 1 page
                page = menupage.options1;
                
                //Reset option to top
                current = 0;
            }
            
            //Option 3: Exit
            else if (current == 2) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Exit the game
                game_end();
                
            }
            
        }

        //File selection
        else if (page == menupage.fileselect) {
        
            //Options 1 to 3: File selection
            if (current &lt; 3) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Stop the stream...
                audio_stop_sound(global.stream);
                
                //...and free it from memory
                audio_destroy_stream(global.stream);
                global.stream = noone;
                
                //Check what file is selected
                switch (current) {
                
                    //File A
                    case (0): global.file = "MWDSave1.sav"; break;
                    
                    //File B
                    case (1): global.file = "MWDSave2.sav"; break;
                    
                    //File C
                    case (2): global.file = "MWDSave3.sav"; break;
                    
                }
                
                //If the file exists
                if (file_exists(global.file)) {
                
                    //Load the game file
                    load(global.file);
                    
                    //Prepare to go to the next room
                    alarm[2] = 2;

                }
                
                //Otherwise, go to the intro screen
                else {
                
                    alarm[5] = 2;
                   
                }
                
            }
            
            //Chose 3: File Delete
            else if (current == 3) {
            
                //Go to file delete
                page = menupage.filedelete;
                
                //Set the choice
                current = 0;
                
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
            
            }
            
            //Choice 4: Back
            else if (current == 4) {
                                
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
            
                //Go to Main page
                page = menupage.main;
                
                //Set the choice
                current = 0;       
            }            
        }
        
        //Page 2: Options
        else if (page == menupage.options1) {
        
            //Option 1: Keyboard configuration
            if (current == 0) {
                
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Keys 1 page
                page = menupage.keys1;
                
                //Set the choice
                current = 0;
                
            }
            
            //Option 2: Window size
            else if (current == 1) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
            
                //Switch filter
                with (obj_controller) {
                
                    if (filter &gt;= 0) &amp;&amp; (filter &lt; 3) {
                    
                        filter ++;
                        fullscreen = false;
                        
                    } else if (filter == 3) {
                    
                        fullscreen = !fullscreen;
                        
                        if (!fullscreen)
                        
                            filter = 0;
                            
                    }
                    
                    //Apply settings
                    event_user(1);
                      
                }
                
            }
            
            //Option 3: Auto-Save
            else if (current == 2) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
            
                global.autosave = !global.autosave;
                
            }
            
            //Option 4: HUD Style
            else if (current == 3) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Enable FPS on screen
                with (obj_controller) {
                
                    hud_type++;
                    if (hud_type &gt; 5)
                        hud_type = 0;
                        
                }
                
            }
            
            //Option 5: Next Page
            else if (current == 4) {
                            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to page page 2 of options
                page = menupage.options2;
                
                //Set the choice
                current --;   
                                 
            }
            
            //Option 6: Back
            else if (current == 5) {
                            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Main page
                page = menupage.main;
                
                //Set the choice
                current = 0;   
                                 
            }
            
        }
        
        else if (page == menupage.options2) {

            //Option 1: V-Sync
            if (current == 0) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Enable V-Sync
                with (obj_controller) {
                
                    //Toggle vertical syncronization
                    vsync = !vsync;
                    
                    //Apply settings
                    event_user(1);
                    
                }
                
            }
            
            //Option 2: FPS
            else if (current == 1) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Enable FPS on screen
                with (obj_controller) {
                
                    //Toggle FPS
                    showfps = !showfps;
                }
                
            }
            
            //Option 6: Credits
            else if (current == 2) {
            
                //Stop the stream...
                audio_stop_sound(global.stream);
                
                //...and free it from memory
                audio_destroy_stream(global.stream);
                global.stream = noone;
                
                //Disable pixelation
                with (obj_controller) {
                
                    pixelate = 60;
                }
            
                audio_play_sound(snd_enterstage, 0, false);     
                room_goto(rm_credits);

            }
            
            //Option 5: Next Page
            else if (current == 3) {
                            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to page page 1 of options
                page = menupage.options1;
                
                //Set the choice
                current ++;   
                                 
            }
            
            //Option 6: Back
            else if (current == 4) {
                            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Main page
                page = menupage.main;
                
                //Set the choice
                current = 0;   
                                 
            }
            
        }
        
        //Keys 1/2
        else if (page == menupage.keys1) {
        
            //Options 1 to 5
            if (current &lt; 5) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Set 'Key' mode
                mode = 3;
                
                //Switch current
                switch (current) {
                
                    case (0): set_keys(0, "PRESS NEW 'RUN/SHOOT' KEY...", vk_control); break;
                    case (1): set_keys(1, "PRESS NEW 'JUMP' KEY...", vk_shift); break;
                    case (2): set_keys(2, "PRESS NEW 'SPIN' KEY...", vk_space); break;
                    case (3): set_keys(3, "PRESS NEW 'RESERVE' KEY...", vk_backspace); break;
                    case (4): set_keys(4, "PRESS NEW 'PAUSE' KEY...", vk_enter); break;
                }                    
                
                //Set 'Active' mode
                alarm[3] = 3;
            }
        
            //Option 6: Reset keys
            else if (current == 5) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Reset all keys
                alarm[4] = 1;
            }
            
            //Option 7: Page 2 / 2
            else if (current == 6) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Keys 2
                page = menupage.keys2;
                
                //Move pointer selection down 1
                current --;
                
            }
            
            //Option 8: Back
            else if (current == 7) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Options 1 menu
                page = menupage.options1;
                
                //Set the choice
                current = 0;
            }
            
        }
        
        //Keys 2/2
        else if (page == 4) {
    
            //Options 1 to 4
            if (current &lt; 4) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Set 'Key' mode
                mode = 3;
                
                //Switch current
                switch (current) {
                
                    case (0): set_keys(5, "PRESS NEW 'UP' KEY..", vk_up); break;
                    case (1): set_keys(6, "PRESS NEW 'DOWN' KEY...", vk_down); break;
                    case (2): set_keys(7, "PRESS NEW 'LEFT' KEY...", vk_left); break;
                    case (3): set_keys(8, "PRESS NEW 'RIGHT' KEY...", vk_right); break;
                }                    
                
                //Set 'Active' mode
                alarm[3] = 3;
            }
        
            //Option 5: Reset keys
            else if (current == 4) {
            
                //Play 'Correct' sound
                audio_stop_play_sound(snd_correct, 0, false);
                
                //Reset all keys
                alarm[4] = 1;
            }
            
            //Option 6: Page 1 / 2
            else if (current == 5) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Keys 1 menu
                page = menupage.keys1;
                
                //Bring the pointer selection 1 up
                current ++;
                
            }
                            
            //Option 7: Back
            else if (current == 6) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Go to Options 1 menu
                page = menupage.options1;
                
                //Set the choice
                current = 0;
            }
            
        }
        
        //File delete
        else if (page == menupage.filedelete) {
        
            //Options 1 to 3: File deletion
            if (current &lt; 3) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
                
                //Check what file is selected
                switch (current) {
                
                    //File A
                    case (0):
                        file_delete("MWDSave1.sav");
                        file_delete("MWDInfo1.ini");
                        break;
                    
                    //File B
                    case (1):
                        file_delete("MWDSave2.sav");
                        file_delete("MWDInfo2.ini");
                        break;
                    
                    //File C
                    case (2):
                        file_delete("MWDSave3.sav");
                        file_delete("MWDInfo3.ini");
                        break;
                    
                }
                
                //Update file info
                event_user(0);
                
            }
            
            //Chose 3: Go back to File Select
            else if (current == 3) {
            
                //Play 'Coin' sound
                audio_stop_play_sound(snd_coin, 0, false);
            
                //Go to file select
                page = menupage.fileselect;
                
                //Set the choice
                current = 0;
            
            }
          
        }
        
    }
    
    //If the page has changed from pressing a button...
    if (page != current_page) {
    
        //Make the pointer show up
        display = true;
        
        //Set pointer timer
        alarm[0] = 20;
    
    }
        
}

//Update HUD message
with (obj_controller) {

   switch (hud_type) {
    
        //SMA2
        case (1): other.menu[menupage.options1,3] = "HUD: SMA2"; break;
        
        //SMA4
        case (2): other.menu[menupage.options1,3] = "HUD: SMA4"; break;
        
        //Minimalist
        case (3): other.menu[menupage.options1,3] = "HUD: MINI/SCORE"; break;
        
        //Minimalist (No Score)
        case (4): other.menu[menupage.options1,3] = "HUD: MINI/NO SCORE"; break;
        
        //Hello Engine
        case (5): other.menu[menupage.options1,3] = "HUD: HELLO"; break;
        
        //Default
        default: other.menu[menupage.options1,3] = "HUD TYPE: DEFAULT"; break;
    }
        
}

//Update auto-save text
if (global.autosave)
    menu[menupage.options1,2] = "AUTO-SAVE: ON";
else
    menu[menupage.options1,2] = "AUTO-SAVE: OFF";

//Update V-Sync text
if (obj_controller.vsync)
    menu[menupage.options2,0] = "V-Sync: ON";
else
    menu[menupage.options2,0] = "V-Sync: OFF";
    
//Update FPS text
if (obj_controller.showfps)
    menu[menupage.options2,1] = "FPS: ON";
else
    menu[menupage.options2,1] = "FPS: OFF";
    
//Update Key Text
menu[menupage.keys1,0] = "RUN/SHOOT ... " + string(key_to_string(global.key[input.action1]));
menu[menupage.keys1,1] = "JUMP      ... " + string(key_to_string(global.key[input.action0]));
menu[menupage.keys1,2] = "SPIN      ... " + string(key_to_string(global.key[input.action2]));
menu[menupage.keys1,3] = "RESERVE   ... " + string(key_to_string(global.key[input.select]));
menu[menupage.keys1,4] = "PAUSE     ... " + string(key_to_string(global.key[input.start]));
menu[menupage.keys2,0] = "Up        ... " + string(key_to_string(global.key[input.up]));
menu[menupage.keys2,1] = "Down      ... " + string(key_to_string(global.key[input.down]));
menu[menupage.keys2,2] = "Left      ... " + string(key_to_string(global.key[input.left]));
menu[menupage.keys2,3] = "Right     ... " + string(key_to_string(global.key[input.right]));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update file info

for (var i = 1; i &lt;= 3; i ++) {

    fileinfo[i] = -1;
        
    if (file_exists("MWDInfo"+string(i)+".ini")) {
    
        ini_open("MWDInfo"+string(i)+".ini");
        fileinfo[i] = ini_read_real("Exits", "Completion", 0);
        ini_close();
    
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spotlight

//Don't continue to draw the spotlight if it has reached a certain size
if (scale &lt; 300) {

    //Check if the spotlight still exists, and create a new one if not
    if (!surface_exists(spotlight)) {
    
        spotlight = surface_create(view_wview[0],view_hview[0]);
        
    }
    
    //Otherwise, draw the iris-out effect.
    else {
    
        //Set the target surface.
        surface_set_target(spotlight);
        
        //Set circle color
        draw_set_color(c_black);
        
        //Draw a rectangle
        draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false);
        
        if (scale &gt; 0.01) {
        
            //Set the blending mode
            draw_set_blend_mode(bm_subtract);
            
            //Draw the transition image.
            draw_set_circle_precision(64);
            
            //Draw the circle
            draw_circle(view_xview[0] + (view_wview[0]/2), view_yview[0] + (view_hview[0]/2), scale, false);
            
            //Set the blending end mode
            draw_set_blend_mode(bm_normal);
        
        }
        
        //Reset color
        draw_set_color(c_white);
        
        //Reset the surface target
        surface_reset_target();
        
        //Draw the spotlight
        draw_surface(spotlight,view_xview[0],view_yview[0]);
        
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dark background during deletion

//If on file deletion...
if (page == menupage.filedelete) {

    //Set alpha
    draw_set_alpha(0.5);
    
    //Draw rectangle
    draw_rectangle_colour(view_xview[view_current], view_yview[view_current], view_xview[view_current] + view_wview[view_current], view_yview[view_current] + view_hview[view_current], c_black, c_black, c_black, c_black, false);
    
    //Set alpha
    draw_set_alpha(1);

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title Text

//Set the font
draw_set_font(global.font);

//Set the colour
draw_set_colour(c_white);
    
//Draw option text
if (mode &gt; 1) {
    
    for (var i = 0; i &lt; array_length_2d(menu,page); i ++) {
    
        //Spacing between lines
        var spacing = 16;
        
        //X offset of the text
        var text_xoffset = 90;
        
        //Y offset of the text from the center
        var text_yoffset = 16;
        
        //Slight line scale change if the row length is too large
        if (array_length_2d(menu,page) &gt; 6)
        
            var spacing = 12;
            
        //Adjust the text on File Select
        if (page == menupage.fileselect) {
        
            text_xoffset = 80;
            text_yoffset = 8;
            
        }
        
        //Adjust the text on File Delete
        if (page == menupage.filedelete) {
        
            text_xoffset = 48;
            text_yoffset = 8;
            
        }
            
        //Adjust the text on Options
        if (page == menupage.options1 || page == menupage.options2) {
        
            text_xoffset = 64;
            text_yoffset = 4;
            
        }
            
        //Adjust the text on Key input
        if (page == menupage.keys1)
        || (page == menupage.keys2) {
        
            text_xoffset = 40;
            text_yoffset = 0;
            
        }
        
        //Draw the text
        draw_text(view_xview[0]+text_xoffset, view_yview[0]+(view_hview[0]/2)+text_yoffset+(spacing*(i)), menu[page,i]);
        
        //Draw file info if your selection is within the files
        if ((page == menupage.fileselect || page == menupage.filedelete)
        &amp;&amp; i &lt; 3) {

            draw_text_colour(view_xview[0]+text_xoffset+string_width(menu[page,i]), view_yview[0]+(view_hview[0]/2)+text_yoffset+(spacing*(i)), " ...", c_smwyellow, c_smwyellow, c_smwyellow, c_smwyellow, 1);
            
            var file_info = "EMPTY";
            var extra_offset = 0;
            var col = c_white;
            
            if (fileinfo[i+1] != -1) {
                
                //Change info to current file number    
                file_info = fileinfo[i+1];
                
                //Set color to yellow
                col = c_smwyellow;
                
                //Offset number
                if (string_length(file_info) &lt; 2)
                
                    extra_offset = 8;
                
            }
            
            draw_text_colour(view_xview[0]+text_xoffset+string_width(menu[page,i])+string_width(" ...")+extra_offset, view_yview[0]+(view_hview[0]/2)+text_yoffset+(spacing*(i)), file_info, col, col, col, col, 1);
        
        }        
            
        //Draw the cursor
        if (i == current) &amp;&amp; (display == 1)
        
            draw_sprite_ext(spr_cursor_title, image_index, view_xview[0]+(text_xoffset-18), view_yview[0]+(view_hview[0]/2)+text_yoffset+(spacing*(i)), 1, 1, 0, c_white, 1);
    
    }

} else if (scale &gt;= 100) &amp;&amp; (display == 1) {

    //Set horizontal alignment to the center
    draw_set_halign(fa_center);

    //Draw the text
    draw_text(view_xview[0]+(global.gw/2), view_yview[0]+(global.gh/2)+16, "PRESS START!");
    
    //Reset horizontal text alignment
    draw_set_halign(fa_left);

}

//Center the text
draw_set_halign(fa_center);

//Set the disclaimer colour
draw_set_colour(make_colour_rgb(0, 216, 248));

//Disclaimer
if (page == 0)

    draw_text(view_xview[0]+view_wview[0]/2, view_yview[0]+view_hview[0]-40, string(cs_disclaimer));

//Set the default colour
draw_set_colour(c_white);

//Reset text alignment
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title Decoration

//Draw title
draw_background_ext(bgr_title, x, y+40, 1, 1, 0, c_white, 1);

//Draw title border
draw_background_ext(bgr_titlebg, x, y, 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
